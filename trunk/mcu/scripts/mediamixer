#! /bin/bash
### BEGIN INIT INFO
# Provides:          mcu
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: MCU Videomixer
# Description:       Starts and stops mcu Video Mixer
### END INIT INFO

MCU_CONF="/etc/medooze/mediamixer.conf"
. $MCU_CONF
# Do NOT "set -e"
 
DESC="MCU Video Media Mixing Server"

DAEMON=mcu
if [ -n "MCU_PATH" ]; then
	DAEMON=${MCU_PATH}/mcu
fi

echo "MCU: $DAEMON"

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

ARGS=" -f"

if [ -n "$HTTP_PORT" ]; then
	ARGS+= " --http-port ${HTTP_PORT}"
fi
if [ -n "$RTMP_PORT" ]; then
	ARGS+= " --rtmp-port ${RTMP_PORT}"
fi
if [ -n "$LOG_FILE" ]; then
	ARGS+= " --log-file ${LOG_FILE}"
fi
if [ -n "$PID_FILE" ]; then
	ARGS+= " --pid-file ${PID_FILE}"
fi
if [ -n "$MIN_RTP_PORT" ]; then
	ARGS+= " --min-rtp-port ${MIN_RTP_PORT}"
fi
if [ -n "$MAX_RTP_PORT" ]; then
	ARGS+= " --max-rtp-port ${MAX_RTP_PORT}"
fi
if [ -n "$VAD_PERIOD" ]; then
	ARGS+= " --vad-period ${VAD_PERIOD}"
fi

 
#
# Function that starts the daemon/service
#
do_start()
{

        echo -n "Starting $DESC: "
	if [ -n "$MCU_USER" ]; then
		su $MCU_USER -c "cd ${MCU_WKD} && ${DAEMON} ${ARGS}"
	else
		cd ${MCU_WKD} && ${DAEMON} ${ARGS}
	fi
        echo "Done"
}
 
#
# Function that stops the daemon/service
#
do_stop()
{
	if [ -z "$PID_FILE" ]; then
		PID_FILE="mcu.pid"
	fi
	
        echo -n "Stopping $DESC:"
        cd ${MCU_WKD} && kill -9 `cat $PID_FILE`
        echo "Done"
}
 
 
case "$1" in
  start)
        do_start
        ;;
  stop)
        do_stop
        ;;
  restart|force-reload)
        echo -n "Restarting $DESC"
        do_stop
        do_start
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
        exit 3
        ;;
esac
 
:
